{"ast":null,"code":"var _jsxFileName = \"/Users/harshpatel/react/Connecting to a Database/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // function fetchMovieHandler(){\n  //   fetch('https://swapi.dev/api/films')\n  //   .then((response) => {\n  //     return response.json();\n  //   })\n  //   .then((data) => {\n  //     const transformedMovies = data.results.map((movieData) => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         releaseDate : movieData.release_date,\n  //         openingText: movieData.opening_crawl\n  //       }\n  //     })\n  //     setMovies(transformedMovies)\n  //   })\n  // }\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-https-141e5-default-rtdb.firebaseio.com/movies.json');\n      if (!response.ok) {\n        throw new Error('Something Went Wrong...');\n      }\n      const data = await response.json();\n      // console.log(data)\n      const loadedMovies = [];\n      for (const key in data) {\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        });\n      }\n      const transformedMovies = loadedMovies.map(movieData => {\n        return {\n          id: movieData.id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        };\n      });\n      setMovies(transformedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMovieHandler();\n  }, [fetchMovieHandler]);\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-https-141e5-default-rtdb.firebaseio.com/movies.json', {\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(AddMovie, {\n        onAddMovie: addMovieHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 43\n      }, this), !isLoading && movies.length === 0 && !error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 55\n      }, this), !isLoading && error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading......\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"q47TvAvDtUCPG140X/S2DS6GxUM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","MoviesList","AddMovie","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","ok","Error","data","json","loadedMovies","key","push","id","title","openingText","releaseDate","transformedMovies","map","movieData","release_date","opening_crawl","message","addMovieHandler","movie","method","body","JSON","stringify","headers","console","log","Fragment","children","onAddMovie","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["/Users/harshpatel/react/Connecting to a Database/src/App.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport AddMovie from './components/AddMovie';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null)\n\n  // function fetchMovieHandler(){\n  //   fetch('https://swapi.dev/api/films')\n  //   .then((response) => {\n  //     return response.json();\n  //   })\n  //   .then((data) => {\n  //     const transformedMovies = data.results.map((movieData) => {\n  //       return {\n  //         id: movieData.episode_id,\n  //         title: movieData.title,\n  //         releaseDate : movieData.release_date,\n  //         openingText: movieData.opening_crawl\n  //       }\n  //     })\n  //     setMovies(transformedMovies)\n  //   })\n  // }\n\n  const fetchMovieHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-https-141e5-default-rtdb.firebaseio.com/movies.json')\n      if(!response.ok){\n        throw new Error('Something Went Wrong...')\n      }\n      const data = await response.json();\n      // console.log(data)\n      const loadedMovies= [];\n\n      for (const key in data){\n        loadedMovies.push({\n          id: key,\n          title: data[key].title,\n          openingText: data[key].openingText,\n          releaseDate: data[key].releaseDate\n        })\n      }\n      const transformedMovies = loadedMovies.map((movieData) => {\n        return {\n          id: movieData.id,\n          title: movieData.title,\n          releaseDate: movieData.release_date,\n          openingText: movieData.opening_crawl\n        }\n      })\n      setMovies(transformedMovies)\n    }\n    catch(error) {\n      setError(error.message)\n    }\n    setIsLoading(false)\n  },[]);\n\n  useEffect(() => {\n    fetchMovieHandler();\n  },[fetchMovieHandler])\n\n  async function addMovieHandler(movie){\n    const response = await fetch('https://react-https-141e5-default-rtdb.firebaseio.com/movies.json',{\n      method: 'POST',\n      body: JSON.stringify(movie),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length>0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length===0 && !error && <p>No Movies Found</p>}\n        {!isLoading && error && <p>{error}</p>}\n        {isLoading && <p>Loading......</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}